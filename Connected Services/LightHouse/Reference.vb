'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Runtime.Serialization

Namespace LightHouse
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="SfolRequestDocument", [Namespace]:="http://schemas.datacontract.org/2004/07/Lighthouse.Udi.Scripting"),  _
     System.SerializableAttribute()>  _
    Partial Public Class SfolRequestDocument
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OutboundTransactionsUpdateField As System.Xml.Linq.XElement
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private XmlDocumentField As System.Xml.Linq.XElement
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OutboundTransactionsUpdate() As System.Xml.Linq.XElement
            Get
                Return Me.OutboundTransactionsUpdateField
            End Get
            Set
                If (Object.ReferenceEquals(Me.OutboundTransactionsUpdateField, value) <> true) Then
                    Me.OutboundTransactionsUpdateField = value
                    Me.RaisePropertyChanged("OutboundTransactionsUpdate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property XmlDocument() As System.Xml.Linq.XElement
            Get
                Return Me.XmlDocumentField
            End Get
            Set
                If (Object.ReferenceEquals(Me.XmlDocumentField, value) <> true) Then
                    Me.XmlDocumentField = value
                    Me.RaisePropertyChanged("XmlDocument")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="SfolWcfReturn", [Namespace]:="http://schemas.datacontract.org/2004/07/Lighthouse.Udi.Scripting"),  _
     System.SerializableAttribute()>  _
    Partial Public Class SfolWcfReturn
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ErrorMessageField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private OutboundTransactionsField As System.Xml.Linq.XElement
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ProcessingSuccessField As Boolean
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ErrorMessage() As String
            Get
                Return Me.ErrorMessageField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ErrorMessageField, value) <> true) Then
                    Me.ErrorMessageField = value
                    Me.RaisePropertyChanged("ErrorMessage")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property OutboundTransactions() As System.Xml.Linq.XElement
            Get
                Return Me.OutboundTransactionsField
            End Get
            Set
                If (Object.ReferenceEquals(Me.OutboundTransactionsField, value) <> true) Then
                    Me.OutboundTransactionsField = value
                    Me.RaisePropertyChanged("OutboundTransactions")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property ProcessingSuccess() As Boolean
            Get
                Return Me.ProcessingSuccessField
            End Get
            Set
                If (Me.ProcessingSuccessField.Equals(value) <> true) Then
                    Me.ProcessingSuccessField = value
                    Me.RaisePropertyChanged("ProcessingSuccess")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute(ConfigurationName:="LightHouse.ICERE_PriorityErpInterface")>  _
    Public Interface ICERE_PriorityErpInterface
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ICERE_PriorityErpInterface/PutInventoryPack", ReplyAction:="http://tempuri.org/ICERE_PriorityErpInterface/PutInventoryPackResponse")>  _
        Function PutInventoryPack(ByVal sfolRequestDocument As LightHouse.SfolRequestDocument) As LightHouse.SfolWcfReturn
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ICERE_PriorityErpInterface/PutInventoryPack", ReplyAction:="http://tempuri.org/ICERE_PriorityErpInterface/PutInventoryPackResponse")>  _
        Function PutInventoryPackAsync(ByVal sfolRequestDocument As LightHouse.SfolRequestDocument) As System.Threading.Tasks.Task(Of LightHouse.SfolWcfReturn)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ICERE_PriorityErpInterface/PutWorksOrder", ReplyAction:="http://tempuri.org/ICERE_PriorityErpInterface/PutWorksOrderResponse")>  _
        Function PutWorksOrder(ByVal sfolRequestDocument As LightHouse.SfolRequestDocument) As LightHouse.SfolWcfReturn
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ICERE_PriorityErpInterface/PutWorksOrder", ReplyAction:="http://tempuri.org/ICERE_PriorityErpInterface/PutWorksOrderResponse")>  _
        Function PutWorksOrderAsync(ByVal sfolRequestDocument As LightHouse.SfolRequestDocument) As System.Threading.Tasks.Task(Of LightHouse.SfolWcfReturn)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ICERE_PriorityErpInterface/GetOutboundTransactions", ReplyAction:="http://tempuri.org/ICERE_PriorityErpInterface/GetOutboundTransactionsResponse")>  _
        Function GetOutboundTransactions() As LightHouse.SfolWcfReturn
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ICERE_PriorityErpInterface/GetOutboundTransactions", ReplyAction:="http://tempuri.org/ICERE_PriorityErpInterface/GetOutboundTransactionsResponse")>  _
        Function GetOutboundTransactionsAsync() As System.Threading.Tasks.Task(Of LightHouse.SfolWcfReturn)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ICERE_PriorityErpInterface/PutOutboundTransactionUpdate", ReplyAction:="http://tempuri.org/ICERE_PriorityErpInterface/PutOutboundTransactionUpdateRespons"& _ 
            "e")>  _
        Sub PutOutboundTransactionUpdate(ByVal sfolRequestDocument As LightHouse.SfolRequestDocument)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/ICERE_PriorityErpInterface/PutOutboundTransactionUpdate", ReplyAction:="http://tempuri.org/ICERE_PriorityErpInterface/PutOutboundTransactionUpdateRespons"& _ 
            "e")>  _
        Function PutOutboundTransactionUpdateAsync(ByVal sfolRequestDocument As LightHouse.SfolRequestDocument) As System.Threading.Tasks.Task
    End Interface
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface ICERE_PriorityErpInterfaceChannel
        Inherits LightHouse.ICERE_PriorityErpInterface, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class CERE_PriorityErpInterfaceClient
        Inherits System.ServiceModel.ClientBase(Of LightHouse.ICERE_PriorityErpInterface)
        Implements LightHouse.ICERE_PriorityErpInterface
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Function PutInventoryPack(ByVal sfolRequestDocument As LightHouse.SfolRequestDocument) As LightHouse.SfolWcfReturn Implements LightHouse.ICERE_PriorityErpInterface.PutInventoryPack
            Return MyBase.Channel.PutInventoryPack(sfolRequestDocument)
        End Function
        
        Public Function PutInventoryPackAsync(ByVal sfolRequestDocument As LightHouse.SfolRequestDocument) As System.Threading.Tasks.Task(Of LightHouse.SfolWcfReturn) Implements LightHouse.ICERE_PriorityErpInterface.PutInventoryPackAsync
            Return MyBase.Channel.PutInventoryPackAsync(sfolRequestDocument)
        End Function
        
        Public Function PutWorksOrder(ByVal sfolRequestDocument As LightHouse.SfolRequestDocument) As LightHouse.SfolWcfReturn Implements LightHouse.ICERE_PriorityErpInterface.PutWorksOrder
            Return MyBase.Channel.PutWorksOrder(sfolRequestDocument)
        End Function
        
        Public Function PutWorksOrderAsync(ByVal sfolRequestDocument As LightHouse.SfolRequestDocument) As System.Threading.Tasks.Task(Of LightHouse.SfolWcfReturn) Implements LightHouse.ICERE_PriorityErpInterface.PutWorksOrderAsync
            Return MyBase.Channel.PutWorksOrderAsync(sfolRequestDocument)
        End Function
        
        Public Function GetOutboundTransactions() As LightHouse.SfolWcfReturn Implements LightHouse.ICERE_PriorityErpInterface.GetOutboundTransactions
            Return MyBase.Channel.GetOutboundTransactions
        End Function
        
        Public Function GetOutboundTransactionsAsync() As System.Threading.Tasks.Task(Of LightHouse.SfolWcfReturn) Implements LightHouse.ICERE_PriorityErpInterface.GetOutboundTransactionsAsync
            Return MyBase.Channel.GetOutboundTransactionsAsync
        End Function
        
        Public Sub PutOutboundTransactionUpdate(ByVal sfolRequestDocument As LightHouse.SfolRequestDocument) Implements LightHouse.ICERE_PriorityErpInterface.PutOutboundTransactionUpdate
            MyBase.Channel.PutOutboundTransactionUpdate(sfolRequestDocument)
        End Sub
        
        Public Function PutOutboundTransactionUpdateAsync(ByVal sfolRequestDocument As LightHouse.SfolRequestDocument) As System.Threading.Tasks.Task Implements LightHouse.ICERE_PriorityErpInterface.PutOutboundTransactionUpdateAsync
            Return MyBase.Channel.PutOutboundTransactionUpdateAsync(sfolRequestDocument)
        End Function
    End Class
End Namespace
